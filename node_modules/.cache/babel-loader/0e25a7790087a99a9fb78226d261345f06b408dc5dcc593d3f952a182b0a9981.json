{"ast":null,"code":"var _jsxFileName = \"/Users/claudia/Documents/React/myway/src/components/pages/register/Register.jsx\",\n  _s = $RefreshSig$();\nimport \"./register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { auth } from \"../../../firebase\";\nimport { validatePassword } from \"../../../utils/passwordHelpers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isRegistering, setIsRegistering] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // All fields are required\n    if (!username.trim() || !firstName.trim() || !lastName.trim()) {\n      setError(\"All fields are required\");\n      return;\n    }\n\n    // Username Validation\n    if (!/^[a-zA-Z0-9_]{3,20}$/.test(username)) {\n      setError(\"Username must be 3-20 characters and can only contain letters, numbers and underscore\");\n      return;\n    }\n\n    // Password Validation\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    const passwordError = validatePassword(password);\n    if (passwordError) {\n      setError(passwordError);\n      return;\n    }\n    try {\n      setIsRegistering(true);\n\n      // 1. Check if username is available\n      const checkResponse = await fetch('http://localhost:5001/api/users/check-username', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const checkResult = await checkResponse.json();\n      if (!checkResponse.ok) {\n        throw new Error(checkResult.message || 'Username is not available');\n      }\n\n      // 2. 如果用户名可用，再创建 Firebase 用户\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      try {\n        // 3. 然后将用户数据保存到 MongoDB\n        const response = await fetch('http://localhost:5001/api/users/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            firebaseUid: userCredential.user.uid,\n            username,\n            firstName,\n            lastName\n          })\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n          // 4. 如果 MongoDB 保存失败，删除 Firebase 用户\n          await userCredential.user.delete();\n          throw new Error(responseData.message || 'Failed to save user data');\n        }\n        navigate(\"/login\");\n      } catch (mongoError) {\n        // 如果 MongoDB 操作失败，删除 Firebase 用户\n        await userCredential.user.delete();\n        throw mongoError;\n      }\n    } catch (error) {\n      setIsRegistering(false);\n      console.error('Registration error:', error);\n      if (error.code) {\n        // Firebase 错误\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            setError(\"Email already exists\");\n            break;\n          case 'auth/invalid-email':\n            setError(\"Invalid email format\");\n            break;\n          default:\n            setError(`Registration failed: ${error.message}`);\n        }\n      } else {\n        // MongoDB 或其他错误\n        setError(error.message || \"Registration failed. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"registerTitle\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registerForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registerInput\",\n        placeholder: \"Enter your username...\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        autoFocus: true,\n        minLength: 3,\n        maxLength: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registerInput\",\n        placeholder: \"Enter your first name...\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registerInput\",\n        placeholder: \"Enter your last name...\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"registerInput\",\n        placeholder: \"Enter your email...\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"registerInput\",\n        placeholder: \"Enter your password...\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), password && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"registerInput\",\n          placeholder: \"Confirm your password...\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registerButton\",\n        type: \"submit\",\n        disabled: isRegistering,\n        children: isRegistering ? \"Registering...\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), \"                                         \", error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"registerLoginButton\",\n      onClick: () => navigate(\"/login\"),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"eo7tjzdTaqqKAWm7GIa5U1OT7EM=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useNavigate","createUserWithEmailAndPassword","useState","auth","validatePassword","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","username","setUsername","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","isRegistering","setIsRegistering","handleSubmit","e","preventDefault","trim","test","passwordError","checkResponse","fetch","method","headers","body","JSON","stringify","checkResult","json","ok","Error","message","userCredential","response","firebaseUid","user","uid","responseData","delete","mongoError","console","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","autoFocus","minLength","maxLength","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/claudia/Documents/React/myway/src/components/pages/register/Register.jsx"],"sourcesContent":["import \"./register.css\"\nimport { useNavigate } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { auth } from \"../../../firebase\";\nimport { validatePassword } from \"../../../utils/passwordHelpers\";\n\nexport default function Register() {\n  const navigate = useNavigate();\n\n  const [username, setUsername] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isRegistering, setIsRegistering] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // All fields are required\n    if (!username.trim() || !firstName.trim() || !lastName.trim()) {\n      setError(\"All fields are required\");\n      return;\n    }\n\n    // Username Validation\n    if (!/^[a-zA-Z0-9_]{3,20}$/.test(username)) {\n      setError(\"Username must be 3-20 characters and can only contain letters, numbers and underscore\");\n      return;\n    }\n\n    // Password Validation\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    const passwordError = validatePassword(password);\n    if (passwordError) {\n      setError(passwordError);\n      return;\n    }\n\n    try {\n      setIsRegistering(true);\n\n      // 1. Check if username is available\n      const checkResponse = await fetch('http://localhost:5001/api/users/check-username', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username }),\n      });\n\n      const checkResult = await checkResponse.json();\n      if (!checkResponse.ok) {\n        throw new Error(checkResult.message || 'Username is not available');\n      }\n\n      // 2. 如果用户名可用，再创建 Firebase 用户\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      try {\n        // 3. 然后将用户数据保存到 MongoDB\n        const response = await fetch('http://localhost:5001/api/users/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            firebaseUid: userCredential.user.uid,\n            username,\n            firstName,\n            lastName,\n          }),\n        });\n\n        const responseData = await response.json();\n        \n        if (!response.ok) {\n          // 4. 如果 MongoDB 保存失败，删除 Firebase 用户\n          await userCredential.user.delete();\n          throw new Error(responseData.message || 'Failed to save user data');\n        }\n\n        navigate(\"/login\");\n      } catch (mongoError) {\n        // 如果 MongoDB 操作失败，删除 Firebase 用户\n        await userCredential.user.delete();\n        throw mongoError;\n      }\n\n    } catch (error) {\n      setIsRegistering(false);\n      console.error('Registration error:', error);\n      \n      if (error.code) {\n        // Firebase 错误\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            setError(\"Email already exists\");\n            break;\n          case 'auth/invalid-email':\n            setError(\"Invalid email format\");\n            break;\n          default:\n            setError(`Registration failed: ${error.message}`);\n        }\n      } else {\n        // MongoDB 或其他错误\n        setError(error.message || \"Registration failed. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"register\">\n      <span className=\"registerTitle\">Register</span>\n      <form className=\"registerForm\" onSubmit={handleSubmit}>\n  \n        <label>Username</label> {/* Username */}\n        <input\n          type=\"text\"\n          className=\"registerInput\"\n          placeholder=\"Enter your username...\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          autoFocus={true}\n          minLength={3}\n          maxLength={30}\n        />\n\n        <label>First Name</label> {/* First Name */}\n        <input\n          type=\"text\"\n          className=\"registerInput\"\n          placeholder=\"Enter your first name...\"\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n\n        <label>Last Name</label> {/* Last Name */}\n        <input\n          type=\"text\"\n          className=\"registerInput\"\n          placeholder=\"Enter your last name...\"\n          value={lastName}\n          onChange={(e) => setLastName(e.target.value)}\n        />\n\n        <label>Email</label> {/* Email */}\n        <input\n          type=\"email\"\n          className=\"registerInput\"\n          placeholder=\"Enter your email...\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        <label>Password</label> {/* Password */}\n        <input\n          type=\"password\"\n          className=\"registerInput\"\n          placeholder=\"Enter your password...\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n\n        {password && (\n          <>\n            <label>Confirm Password</label> {/* Confirm Password Only Show When Password is Filled */}\n            <input\n              type=\"password\"\n              className=\"registerInput\"\n              placeholder=\"Confirm your password...\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </>\n        )}\n\n        <button \n          className=\"registerButton\" \n          type=\"submit\"\n          disabled={isRegistering}\n        >  \n          {isRegistering ? \"Registering...\" : \"Register\"}\n        </button>                                         {/* Register Button */}\n\n        {error && <span className=\"error\">{error}</span>} {/* Error Message */}\n      </form>\n\n\n      <button className=\"registerLoginButton\" onClick={() => navigate(\"/login\")}>\n        Login\n      </button> {/* Login Button On Top Right */}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}