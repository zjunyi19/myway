{"ast":null,"code":"var _jsxFileName = \"/Users/claudia/Documents/React/myway/src/components/pages/home/Home.jsx\",\n  _s = $RefreshSig$();\nimport Topbar from \"../../../topbar/Topbar\";\nimport CreateHabit from \"../createHabit/CreateHabit\";\nimport \"./home.css\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [showCreateHabit, setShowCreateHabit] = useState(false);\n  const handleClose = () => {\n    setShowCreateHabit(false);\n  };\n  const handleOpen = () => {\n    setShowCreateHabit(true);\n  };\n  const habits = [{\n    id: 1,\n    name: 'Read a book'\n  }, {\n    id: 2,\n    name: 'Exercise'\n  }, {\n    id: 3,\n    name: 'Meditate'\n  }];\n\n  // Calculate the current month and date\n  // Get the current month name\n  const today = new Date();\n  const curMonth = today.getMonth();\n  const m_names = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  // Get this week's dates\n  const day = today.getDay();\n  const diff = today.getDate() - day + (day === 0 ? -6 : 1); // 调整到周一\n  const monday = new Date(today.setDate(diff));\n  const weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'This Week'];\n  const weekDates = weekDays.map((_, index) => {\n    const date = new Date(monday);\n    date.setDate(monday.getDate() + index);\n    return date.getDate();\n  });\n\n  // 在组件内添加状态\n  const [checkStates, setCheckStates] = useState({});\n  const getNextState = currentState => {\n    const states = ['empty', 'quarter', 'half', 'full'];\n    const currentIndex = states.indexOf(currentState || 'empty');\n    return states[(currentIndex + 1) % states.length];\n  };\n  const handleCheckClick = (habitId, day) => {\n    const key = `${habitId}-${day}`;\n    setCheckStates(prev => ({\n      ...prev,\n      [key]: getNextState(prev[key])\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      onAddClick: handleOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendarHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emptyCell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monthRow\",\n          style: {\n            gridColumn: '2 / -1'\n          },\n          children: m_names[curMonth]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daysRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emptyCell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), weekDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendarDay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dayName\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), day !== 'This Week' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dayDate\",\n            children: weekDates[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"habitsGrid\",\n        children: habits.map(habit => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"habitRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"habitName\",\n            children: habit.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), weekDays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkboxCell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `checkbox ${checkStates[`${habit.id}-${day}`] || 'empty'}`,\n              onClick: () => handleCheckClick(habit.id, day)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)\n          }, `${habit.id}-${day}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this))]\n        }, habit.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), showCreateHabit && /*#__PURE__*/_jsxDEV(CreateHabit, {\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"B2ZNNPZALUyH7uKPLJv+SdhtUC8=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Topbar","CreateHabit","useState","jsxDEV","_jsxDEV","Home","_s","showCreateHabit","setShowCreateHabit","handleClose","handleOpen","habits","id","name","today","Date","curMonth","getMonth","m_names","day","getDay","diff","getDate","monday","setDate","weekDays","weekDates","map","_","index","date","checkStates","setCheckStates","getNextState","currentState","states","currentIndex","indexOf","length","handleCheckClick","habitId","key","prev","className","children","onAddClick","fileName","_jsxFileName","lineNumber","columnNumber","style","gridColumn","habit","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/claudia/Documents/React/myway/src/components/pages/home/Home.jsx"],"sourcesContent":["import Topbar from \"../../../topbar/Topbar\";\nimport CreateHabit from \"../createHabit/CreateHabit\";\nimport \"./home.css\"\nimport { useState } from 'react';\n\nexport default function Home() {\n    const [showCreateHabit, setShowCreateHabit] = useState(false);\n\n    const handleClose = () => {\n        setShowCreateHabit(false);\n    };\n\n    const handleOpen = () => {\n        setShowCreateHabit(true);\n    };\n\n    const habits = [\n        { id: 1, name: 'Read a book' },\n        { id: 2, name: 'Exercise' },\n        { id: 3, name: 'Meditate' },\n    ];\n\n    // Calculate the current month and date\n    // Get the current month name\n    const today = new Date();\n    const curMonth = today.getMonth();\n    const m_names = ['January', 'February', 'March', \n        'April', 'May', 'June', 'July', \n        'August', 'September', 'October', 'November', 'December'];\n\n    // Get this week's dates\n    const day = today.getDay();\n    const diff = today.getDate() - day + (day === 0 ? -6 : 1); // 调整到周一\n    const monday = new Date(today.setDate(diff));\n    const weekDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'This Week'];\n    const weekDates = weekDays.map((_, index) => {\n        const date = new Date(monday);\n        date.setDate(monday.getDate() + index);\n        return date.getDate();\n    });\n\n    // 在组件内添加状态\n    const [checkStates, setCheckStates] = useState({});\n\n    const getNextState = (currentState) => {\n        const states = ['empty', 'quarter', 'half', 'full'];\n        const currentIndex = states.indexOf(currentState || 'empty');\n        return states[(currentIndex + 1) % states.length];\n    };\n\n    const handleCheckClick = (habitId, day) => {\n        const key = `${habitId}-${day}`;\n        setCheckStates(prev => ({\n            ...prev,\n            [key]: getNextState(prev[key])\n        }));\n    };\n\n    return (\n        <div className=\"homepage\">\n            <Topbar onAddClick={handleOpen} />\n            <div className=\"contentContainer\">\n              <div className=\"calendarHeader\">\n                <div className=\"emptyCell\"></div>\n                <div className=\"monthRow\" style={{ gridColumn: '2 / -1' }}>\n                  {m_names[curMonth]}\n                </div>\n              </div>\n              <div className=\"daysRow\">\n                <div className=\"emptyCell\"></div>\n                {weekDays.map((day, index) => (\n                  <div key={day} className=\"calendarDay\">\n                    <div className=\"dayName\">{day}</div>\n                    {day !== 'This Week' && (\n                      <div className=\"dayDate\">{weekDates[index]}</div>\n                    )}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"habitsGrid\">\n                {habits.map(habit => (\n                  <div key={habit.id} className=\"habitRow\">\n                    <div className=\"habitName\">{habit.name}</div>\n                    {weekDays.map(day => (\n                      <div key={`${habit.id}-${day}`} className=\"checkboxCell\">\n                        <div \n                          className={`checkbox ${checkStates[`${habit.id}-${day}`] || 'empty'}`}\n                          onClick={() => handleCheckClick(habit.id, day)}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                ))}\n              </div>\n            </div>\n            {showCreateHabit && <CreateHabit onClose={handleClose} />}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}