{"ast":null,"code":"var _jsxFileName = \"/Users/claudia/Documents/React/myway/src/components/pages/register/Register.jsx\",\n  _s = $RefreshSig$();\nimport \"./register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const validatePassword = password => {\n    if (password.length < 6) {\n      return \"Password must be at least 6 characters\";\n    }\n    if (!/\\d/.test(password)) {\n      return \"Password must contain at least one number\";\n    }\n    if (!/[A-Z]/.test(password)) {\n      return \"Password must contain at least one uppercase letter\";\n    }\n    if (!/[a-z]/.test(password)) {\n      return \"Password must contain at least one lowercase letter\";\n    }\n    return \"\";\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Test if email and password are filled\n    if (!email || !password) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    // Test if password is complex enough\n    const passwordError = validatePassword(password);\n    if (passwordError) {\n      setError(passwordError);\n      return;\n    }\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      navigate(\"/\");\n    } catch (error) {\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          setError(\"Email already exists\");\n          break;\n        case 'auth/invalid-email':\n          setError(\"Invalid email format\");\n          break;\n        default:\n          setError(\"Registration failed. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"registerTitle\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registerForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"registerInput\",\n        type: \"email\",\n        placeholder: \"Enter your email...\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"registerInput\",\n        type: \"password\",\n        placeholder: \"Enter your password...\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"registerError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registerButton\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"registerLoginButton\",\n      onClick: () => navigate('/login'),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"I5nlxnySThrFynfg0b4CBLAO5h0=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useNavigate","auth","createUserWithEmailAndPassword","useState","jsxDEV","_jsxDEV","Register","_s","navigate","email","setEmail","password","setPassword","error","setError","validatePassword","length","test","handleSubmit","e","preventDefault","passwordError","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","autoFocus","onClick","_c","$RefreshReg$"],"sources":["/Users/claudia/Documents/React/myway/src/components/pages/register/Register.jsx"],"sourcesContent":["import \"./register.css\"\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../../../firebase\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const validatePassword = (password) => {\n    if (password.length < 6) {\n      return \"Password must be at least 6 characters\";\n    }\n    if (!/\\d/.test(password)) {\n      return \"Password must contain at least one number\";\n    }\n    if (!/[A-Z]/.test(password)) {\n      return \"Password must contain at least one uppercase letter\";\n    }\n    if (!/[a-z]/.test(password)) {\n      return \"Password must contain at least one lowercase letter\";\n    }\n    return \"\";\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Test if email and password are filled\n    if (!email || !password) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    // Test if password is complex enough\n    const passwordError = validatePassword(password);\n    if (passwordError) {\n      setError(passwordError);\n      return;\n    }\n\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      navigate(\"/\");\n    } catch (error) {\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          setError(\"Email already exists\");\n          break;\n        case 'auth/invalid-email':\n          setError(\"Invalid email format\");\n          break;\n        default:\n          setError(\"Registration failed. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"register\">\n      <span className=\"registerTitle\">Register</span>\n      <form className=\"registerForm\" onSubmit={handleSubmit}>\n\n        <label>Email</label>\n        <input \n          className=\"registerInput\" \n          type=\"email\" \n          placeholder=\"Enter your email...\" \n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          autoFocus={true}\n        />\n\n        <label>Password</label>\n        <input \n          className=\"registerInput\" \n          type=\"password\" \n          placeholder=\"Enter your password...\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        {error && <span className=\"registerError\">{error}</span>}\n        \n        <button className=\"registerButton\" type=\"submit\">Register</button>\n      </form>\n\n      <button className=\"registerLoginButton\" onClick={() => navigate('/login')}>Login</button>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}